version: '3'

services:
  mongodb:
    image: mongo:latest
    volumes:
      - ./docker/mongo/mongod.conf:/etc/mongod.conf:ro
      - mongo_data:/data/db
    ports:
      - 27017:27017
    networks:
      - local-network
  
  mysql:
    image: mysql:latest
    environment:
      MYSQL_ROOT_PASSWORD: password
      MYSQL_DATABASE: serverfarm_db
    volumes:
      - ./docker/mysql/my.cnf:/etc/mysql/conf.d/my.cnf:ro
      - mysql_data:/var/lib/mysql
    ports:
      - 3306:3306
    networks:
      - local-network

  zookeeper:
    image: 'bitnami/zookeeper:latest'
    ports:
      - '2181:2181'
    environment:
      - ALLOW_ANONYMOUS_LOGIN=true
    networks:
      - local-network

  kafka:
    image: 'bitnami/kafka:latest'
    ports:
      - '9092:9092'
    environment:
      - KAFKA_BROKER_ID=1
      - KAFKA_LISTENERS=PLAINTEXT://:9092
      - KAFKA_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092
      - KAFKA_ZOOKEEPER_CONNECT=zookeeper:2181
      - ALLOW_PLAINTEXT_LISTENER=yes
    depends_on:
      - zookeeper
    networks:
      - local-network

  express:
    build: ./express
    volumes:
      - ./express:/usr/src/app
      - /usr/src/app/node_modules
    depends_on:
      - mongodb
      - mysql
      - kafka
    ports: 
      - 5000:5000
    networks:
      - local-network

  kafka-consumer:
    build: ./kafka_consumer
    volumes:
      - ./kafka_consumer:/usr/src/kafka_consumer
      - /usr/src/kafka_consumer/node_modules
    depends_on:
      - kafka
    networks:
      - local-network

  frontend:
    build: ./frontend
    volumes:
      - ./frontend:/usr/src/frontend
      - /usr/src/frontend/node_modules
    depends_on:
      - express
    ports: 
      - 3000:3000
    networks:
      - local-network

networks:
  local-network:
    driver: bridge

volumes:
  mongo_data:
  mysql_data: